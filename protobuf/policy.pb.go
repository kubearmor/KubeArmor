// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.12.4
// source: policy.proto

package protobuf

import (
	empty "github.com/golang/protobuf/ptypes/empty"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Symbols defined in public import of google/protobuf/empty.proto.

type Empty = empty.Empty

type PolicyStatus int32

const (
	PolicyStatus_Failure    PolicyStatus = 0
	PolicyStatus_Applied    PolicyStatus = 1
	PolicyStatus_Deleted    PolicyStatus = 2
	PolicyStatus_Modified   PolicyStatus = 3
	PolicyStatus_NotExist   PolicyStatus = 4
	PolicyStatus_Invalid    PolicyStatus = 5
	PolicyStatus_NotEnabled PolicyStatus = 6
)

// Enum value maps for PolicyStatus.
var (
	PolicyStatus_name = map[int32]string{
		0: "Failure",
		1: "Applied",
		2: "Deleted",
		3: "Modified",
		4: "NotExist",
		5: "Invalid",
		6: "NotEnabled",
	}
	PolicyStatus_value = map[string]int32{
		"Failure":    0,
		"Applied":    1,
		"Deleted":    2,
		"Modified":   3,
		"NotExist":   4,
		"Invalid":    5,
		"NotEnabled": 6,
	}
)

func (x PolicyStatus) Enum() *PolicyStatus {
	p := new(PolicyStatus)
	*p = x
	return p
}

func (x PolicyStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PolicyStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_policy_proto_enumTypes[0].Descriptor()
}

func (PolicyStatus) Type() protoreflect.EnumType {
	return &file_policy_proto_enumTypes[0]
}

func (x PolicyStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PolicyStatus.Descriptor instead.
func (PolicyStatus) EnumDescriptor() ([]byte, []int) {
	return file_policy_proto_rawDescGZIP(), []int{0}
}

type Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        PolicyStatus           `protobuf:"varint,1,opt,name=status,proto3,enum=policy.PolicyStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Response) Reset() {
	*x = Response{}
	mi := &file_policy_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_policy_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_policy_proto_rawDescGZIP(), []int{0}
}

func (x *Response) GetStatus() PolicyStatus {
	if x != nil {
		return x.Status
	}
	return PolicyStatus_Failure
}

type Policy struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Policy        []byte                 `protobuf:"bytes,1,opt,name=policy,proto3" json:"policy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Policy) Reset() {
	*x = Policy{}
	mi := &file_policy_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Policy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Policy) ProtoMessage() {}

func (x *Policy) ProtoReflect() protoreflect.Message {
	mi := &file_policy_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Policy.ProtoReflect.Descriptor instead.
func (*Policy) Descriptor() ([]byte, []int) {
	return file_policy_proto_rawDescGZIP(), []int{1}
}

func (x *Policy) GetPolicy() []byte {
	if x != nil {
		return x.Policy
	}
	return nil
}

type ContainerData struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	PolicyList     []string               `protobuf:"bytes,1,rep,name=policyList,proto3" json:"policyList,omitempty"`
	PolicyEnabled  int32                  `protobuf:"varint,2,opt,name=policyEnabled,proto3" json:"policyEnabled,omitempty"`
	PolicyDataList []*Policy              `protobuf:"bytes,3,rep,name=policyDataList,proto3" json:"policyDataList,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ContainerData) Reset() {
	*x = ContainerData{}
	mi := &file_policy_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContainerData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerData) ProtoMessage() {}

func (x *ContainerData) ProtoReflect() protoreflect.Message {
	mi := &file_policy_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerData.ProtoReflect.Descriptor instead.
func (*ContainerData) Descriptor() ([]byte, []int) {
	return file_policy_proto_rawDescGZIP(), []int{2}
}

func (x *ContainerData) GetPolicyList() []string {
	if x != nil {
		return x.PolicyList
	}
	return nil
}

func (x *ContainerData) GetPolicyEnabled() int32 {
	if x != nil {
		return x.PolicyEnabled
	}
	return 0
}

func (x *ContainerData) GetPolicyDataList() []*Policy {
	if x != nil {
		return x.PolicyDataList
	}
	return nil
}

type HostSecurityPolicies struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	PolicyList     []string               `protobuf:"bytes,1,rep,name=policyList,proto3" json:"policyList,omitempty"`
	PolicyDataList []*Policy              `protobuf:"bytes,2,rep,name=policyDataList,proto3" json:"policyDataList,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *HostSecurityPolicies) Reset() {
	*x = HostSecurityPolicies{}
	mi := &file_policy_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HostSecurityPolicies) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostSecurityPolicies) ProtoMessage() {}

func (x *HostSecurityPolicies) ProtoReflect() protoreflect.Message {
	mi := &file_policy_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostSecurityPolicies.ProtoReflect.Descriptor instead.
func (*HostSecurityPolicies) Descriptor() ([]byte, []int) {
	return file_policy_proto_rawDescGZIP(), []int{3}
}

func (x *HostSecurityPolicies) GetPolicyList() []string {
	if x != nil {
		return x.PolicyList
	}
	return nil
}

func (x *HostSecurityPolicies) GetPolicyDataList() []*Policy {
	if x != nil {
		return x.PolicyDataList
	}
	return nil
}

type ProbeResponse struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	ContainerList []string                         `protobuf:"bytes,1,rep,name=containerList,proto3" json:"containerList,omitempty"`
	ContainerMap  map[string]*ContainerData        `protobuf:"bytes,2,rep,name=containerMap,proto3" json:"containerMap,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	HostMap       map[string]*HostSecurityPolicies `protobuf:"bytes,3,rep,name=hostMap,proto3" json:"hostMap,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProbeResponse) Reset() {
	*x = ProbeResponse{}
	mi := &file_policy_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProbeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProbeResponse) ProtoMessage() {}

func (x *ProbeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_policy_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProbeResponse.ProtoReflect.Descriptor instead.
func (*ProbeResponse) Descriptor() ([]byte, []int) {
	return file_policy_proto_rawDescGZIP(), []int{4}
}

func (x *ProbeResponse) GetContainerList() []string {
	if x != nil {
		return x.ContainerList
	}
	return nil
}

func (x *ProbeResponse) GetContainerMap() map[string]*ContainerData {
	if x != nil {
		return x.ContainerMap
	}
	return nil
}

func (x *ProbeResponse) GetHostMap() map[string]*HostSecurityPolicies {
	if x != nil {
		return x.HostMap
	}
	return nil
}

var File_policy_proto protoreflect.FileDescriptor

const file_policy_proto_rawDesc = "" +
	"\n" +
	"\fpolicy.proto\x12\x06policy\x1a\x1bgoogle/protobuf/empty.proto\"8\n" +
	"\bresponse\x12,\n" +
	"\x06status\x18\x01 \x01(\x0e2\x14.policy.PolicyStatusR\x06status\" \n" +
	"\x06policy\x12\x16\n" +
	"\x06policy\x18\x01 \x01(\fR\x06policy\"\x8d\x01\n" +
	"\rContainerData\x12\x1e\n" +
	"\n" +
	"policyList\x18\x01 \x03(\tR\n" +
	"policyList\x12$\n" +
	"\rpolicyEnabled\x18\x02 \x01(\x05R\rpolicyEnabled\x126\n" +
	"\x0epolicyDataList\x18\x03 \x03(\v2\x0e.policy.policyR\x0epolicyDataList\"n\n" +
	"\x14HostSecurityPolicies\x12\x1e\n" +
	"\n" +
	"policyList\x18\x01 \x03(\tR\n" +
	"policyList\x126\n" +
	"\x0epolicyDataList\x18\x02 \x03(\v2\x0e.policy.policyR\x0epolicyDataList\"\xf2\x02\n" +
	"\rProbeResponse\x12$\n" +
	"\rcontainerList\x18\x01 \x03(\tR\rcontainerList\x12K\n" +
	"\fcontainerMap\x18\x02 \x03(\v2'.policy.ProbeResponse.ContainerMapEntryR\fcontainerMap\x12<\n" +
	"\ahostMap\x18\x03 \x03(\v2\".policy.ProbeResponse.HostMapEntryR\ahostMap\x1aV\n" +
	"\x11ContainerMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12+\n" +
	"\x05value\x18\x02 \x01(\v2\x15.policy.ContainerDataR\x05value:\x028\x01\x1aX\n" +
	"\fHostMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x122\n" +
	"\x05value\x18\x02 \x01(\v2\x1c.policy.HostSecurityPoliciesR\x05value:\x028\x01*n\n" +
	"\fPolicyStatus\x12\v\n" +
	"\aFailure\x10\x00\x12\v\n" +
	"\aApplied\x10\x01\x12\v\n" +
	"\aDeleted\x10\x02\x12\f\n" +
	"\bModified\x10\x03\x12\f\n" +
	"\bNotExist\x10\x04\x12\v\n" +
	"\aInvalid\x10\x05\x12\x0e\n" +
	"\n" +
	"NotEnabled\x10\x062M\n" +
	"\fProbeService\x12=\n" +
	"\fgetProbeData\x12\x16.google.protobuf.Empty\x1a\x15.policy.ProbeResponse2t\n" +
	"\rPolicyService\x123\n" +
	"\x0fcontainerPolicy\x12\x0e.policy.policy\x1a\x10.policy.response\x12.\n" +
	"\n" +
	"hostPolicy\x12\x0e.policy.policy\x1a\x10.policy.responseB)Z'github.com/kubearmor/KubeArmor/protobufP\x00b\x06proto3"

var (
	file_policy_proto_rawDescOnce sync.Once
	file_policy_proto_rawDescData []byte
)

func file_policy_proto_rawDescGZIP() []byte {
	file_policy_proto_rawDescOnce.Do(func() {
		file_policy_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_policy_proto_rawDesc), len(file_policy_proto_rawDesc)))
	})
	return file_policy_proto_rawDescData
}

var file_policy_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_policy_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_policy_proto_goTypes = []any{
	(PolicyStatus)(0),            // 0: policy.PolicyStatus
	(*Response)(nil),             // 1: policy.response
	(*Policy)(nil),               // 2: policy.policy
	(*ContainerData)(nil),        // 3: policy.ContainerData
	(*HostSecurityPolicies)(nil), // 4: policy.HostSecurityPolicies
	(*ProbeResponse)(nil),        // 5: policy.ProbeResponse
	nil,                          // 6: policy.ProbeResponse.ContainerMapEntry
	nil,                          // 7: policy.ProbeResponse.HostMapEntry
	(*empty.Empty)(nil),          // 8: google.protobuf.Empty
}
var file_policy_proto_depIdxs = []int32{
	0,  // 0: policy.response.status:type_name -> policy.PolicyStatus
	2,  // 1: policy.ContainerData.policyDataList:type_name -> policy.policy
	2,  // 2: policy.HostSecurityPolicies.policyDataList:type_name -> policy.policy
	6,  // 3: policy.ProbeResponse.containerMap:type_name -> policy.ProbeResponse.ContainerMapEntry
	7,  // 4: policy.ProbeResponse.hostMap:type_name -> policy.ProbeResponse.HostMapEntry
	3,  // 5: policy.ProbeResponse.ContainerMapEntry.value:type_name -> policy.ContainerData
	4,  // 6: policy.ProbeResponse.HostMapEntry.value:type_name -> policy.HostSecurityPolicies
	8,  // 7: policy.ProbeService.getProbeData:input_type -> google.protobuf.Empty
	2,  // 8: policy.PolicyService.containerPolicy:input_type -> policy.policy
	2,  // 9: policy.PolicyService.hostPolicy:input_type -> policy.policy
	5,  // 10: policy.ProbeService.getProbeData:output_type -> policy.ProbeResponse
	1,  // 11: policy.PolicyService.containerPolicy:output_type -> policy.response
	1,  // 12: policy.PolicyService.hostPolicy:output_type -> policy.response
	10, // [10:13] is the sub-list for method output_type
	7,  // [7:10] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_policy_proto_init() }
func file_policy_proto_init() {
	if File_policy_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_policy_proto_rawDesc), len(file_policy_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_policy_proto_goTypes,
		DependencyIndexes: file_policy_proto_depIdxs,
		EnumInfos:         file_policy_proto_enumTypes,
		MessageInfos:      file_policy_proto_msgTypes,
	}.Build()
	File_policy_proto = out.File
	file_policy_proto_goTypes = nil
	file_policy_proto_depIdxs = nil
}
