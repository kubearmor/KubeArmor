name: Test KubeArmor image before pushing
on:
  push:
  pull_request:
    # Sequence of patterns matched against refs/tags
    branches:
      - 'main'

env: 
  TEST_TAG: kubearmor/kubearmor:test

jobs:
  docker:
    name: Create KubeArmor Release - 18.04
    # if: github.repository == 'kubearmor/KubeArmor'
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout KubeArmor code
        uses: actions/checkout@v2

      - name: Generate KubeArmor artifacts
        run: GITHUB_SHA=$GITHUB_SHA ./KubeArmor/build/build_kubearmor.sh test

      - name: Setup Enviroment
        run: |
          # install kernel-headers
          sudo apt-get update
          sudo apt-get install -y linux-headers-$(uname -r)
          
          # install kubeadm
          sudo apt-get update
          sudo apt-get install -y apt-transport-https curl
          curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
          sudo touch /etc/apt/sources.list.d/kubernetes.list
          echo "deb http://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee -a /etc/apt/sources.list.d/kubernetes.list
          sudo apt-get update
          sudo apt-get install -y kubelet=1.21.3-00 kubeadm=1.21.3-00 kubectl=1.21.3-00
          sudo apt-mark hold kubelet kubeadm kubectl
          
          # install apparmor and auditd
          sudo apt-get install -y apparmor apparmor-utils auditd
          sudo systemctl start apparmor; sudo systemctl start auditd
          
          # turn off swap
          sudo swapoff -a
          
          # initialize kubernetes
          sudo kubeadm init --pod-network-cidr=10.244.0.0/16 | tee -a ~/k8s_init.log
          
          # copy k8s config
          mkdir -p $HOME/.kube
          sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
          sudo chown $USER:$USER $HOME/.kube/config
          export KUBECONFIG=$HOME/.kube/config
          echo "export KUBECONFIG=$HOME/.kube/config" | tee -a ~/.bashrc
          
          # install flannel
          kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/v0.13.0/Documentation/kube-flannel.yml
          
          # disable master isolation
          kubectl taint nodes --all node-role.kubernetes.io/master-
            
      - name: Run KubeArmor tests
        run: |
          kubectl apply -f KubeArmor/build/kubearmor-test-docker.yaml
          ./tests/test-scenarios-in-runtime.sh ${{ env.TEST_TAG}}

      - name: Archive log artifacts
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: kubearmor.logs
          path: |
            /tmp/kubearmor.test
            /tmp/kubearmor.log
            /tmp/kubearmor.msg

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_AUTHTOK }}

      - name: Push KubeArmor images to Docker
        run: ./KubeArmor/build/push_kubearmor.sh latest
