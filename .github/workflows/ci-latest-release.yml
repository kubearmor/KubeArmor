name: ci-latest-release

on:
  push:
    branches:
      - "main"
      - "v*"
    paths:
      - "KubeArmor/**"
      - "tests/**"
      - "protobuf/**"
      - ".github/workflows/ci-latest-release.yml"

  create:
    branches:
      - "v*"

jobs:
  build:
    name: Create KubeArmor latest release
    if: github.repository == 'kubearmor/kubearmor'
    runs-on: ubuntu-20.04
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - uses: actions/setup-go@v3
        with:
          go-version: v1.18

      - name: Install the latest LLVM toolchain
        run: ./.github/workflows/install-llvm.sh

      - name: Compile libbpf
        run: ./.github/workflows/install-libbpf.sh

      - name: Setup a Kubernetes enviroment
        id: vars
        run: |
          if [ ${{ github.ref }} == "refs/heads/main" ]; then
            echo ::set-output name=tag::latest
          else
            echo ::set-output name=tag::${GITHUB_REF#refs/*/}
          fi
          RUNTIME=docker ./contribution/k3s/install_k3s.sh

      - name: Install an annotation controller
        run: ./.github/workflows/install-annotation-controller.sh

      - name: Generate KubeArmor artifacts
        run: GITHUB_SHA=$GITHUB_SHA ./KubeArmor/build/build_kubearmor.sh ${{ steps.vars.outputs.tag }}

      - name: Deploy KubeArmor into Kubernetes
        run: |
          sed -i 's/kubearmor\/kubearmor:latest/kubearmor\/kubearmor:${{ steps.vars.outputs.tag }}/g' ./KubeArmor/build/kubearmor-test-docker.yaml
          sed -i 's/kubearmor\/kubearmor-init:latest/kubearmor\/kubearmor-init:${{ steps.vars.outputs.tag }}/g' ./KubeArmor/build/kubearmor-test-docker.yaml
          kubectl apply -f ./KubeArmor/build/kubearmor-test-docker.yaml
          kubectl wait --for=condition=ready --timeout=5m -n kube-system pod -l kubearmor-app=kubearmor

      - name: Test KubeArmor
        run: ./tests/test-scenarios-github.sh ${{ steps.vars.outputs.tag }}

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_AUTHTOK }}

      - name: Push KubeArmor images to Docker
        run: ./KubeArmor/build/push_kubearmor.sh ${{ steps.vars.outputs.tag }}

  push-stable-version:
    name: Create KubeArmor stable release
    needs: build
    if: github.ref != 'refs/heads/main'
    runs-on: ubuntu-20.04
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v2
        with:
          ref: main

      - name: Pull a specific version of KubeArmor from Docker Hub
        id: match
        run: |
          value=`cat STABLE-RELEASE`
          if [ ${{ github.ref }} == refs/heads/$value ]; then
            docker pull docker.io/kubearmor/kubearmor:$value
            docker image tag kubearmor/kubearmor:$value kubearmor/kubearmor:stable
            echo ::set-output name=tag::true
          else
            echo ::set-output name=tag::false
          fi

      - name: Login to Docker Hub
        if: steps.match.outputs.tag == 'true'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_AUTHTOK }}

      - name: Push the stable version of KubeArmor to Docker Hub
        if: steps.match.outputs.tag == 'true'
        run: ./KubeArmor/build/push_kubearmor.sh stable
