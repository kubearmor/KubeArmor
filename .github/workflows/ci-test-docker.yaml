name: Build and Test KubeArmor in docker mode

on:
  push:
    branches:
      - "main"
      - "non-k8s-hsp-test"
    paths:
      - "KubeArmor/**"
      - "protobuf/**"
      - ".github/workflows/ci-test-docker.yaml"
      - "pkg/**"
      - "!STABLE-RELEASE"
      - "tests/**"

jobs:
  build-and-run:
    name: Build Docker containers and run tests
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - uses: actions/setup-go@v5
        with:
          go-version-file: 'KubeArmor/go.mod'

      - name: Install the latest LLVM toolchain
        run: ./.github/workflows/install-llvm.sh

      - name: Compile libbpf
        run: ./.github/workflows/install-libbpf.sh

    #   - name: Setup tag
    #     id: vars
    #     run: |
    #       if [ ${{ github.ref }} == "refs/heads/main" ]; then
    #         echo "tag=latest" >> $GITHUB_OUTPUT
    #       else
    #         echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT
    #       fi

    #   - name: Generate KubeArmor artifacts
    #     run: GITHUB_SHA=$GITHUB_SHA ./KubeArmor/build/build_kubearmor.sh ${{ steps.vars.outputs.tag }}

    #   - name: Build Kubearmor-Operator
    #     working-directory: pkg/KubeArmorOperator
    #     run: |
    #       make docker-build TAG=${{ steps.vars.outputs.tag }}

    #   - name: Build KubeArmor init image
    #     run: |
    #       docker build -t kubearmor/kubearmor-init:${{ steps.vars.outputs.tag }} -f Dockerfile.init .
    #       docker images

    #   - name: Build KubeArmor main image
    #     run: |
    #       docker build -t kubearmor/kubearmor:${{ steps.vars.outputs.tag }} -f Dockerfile .
    #       docker images

    #   - name: Run KubeArmor init container
    #     run: |
    #       docker run --name kubearmor-init -v /tmp/:/opt/kubearmor/BPF kubearmor/kubearmor-init:${{ steps.vars.outputs.tag }}
    #       docker ps -a

    #   - name: Run KubeArmor container
    #     run: |
    #       docker run -d --name kubearmor --privileged --pid host -p 32767:32767 \
    #       -v /tmp/:/opt/kubearmor/BPF \
    #       -v /sys/fs/bpf:/sys/fs/bpf \
    #       -v /sys/kernel/security:/sys/kernel/security \
    #       -v /sys/kernel/debug:/sys/kernel/debug \
    #       -v /var/run/docker.sock:/var/run/docker.sock \
    #       -v /var/lib/docker:/var/lib/docker \
    #       -v /etc/apparmor.d:/etc/apparmor.d \
    #       kubearmor/kubearmor:${{ steps.vars.outputs.tag }} -k8s=false -enableKubeArmorHostPolicy
    #       sleep 70  # Wait for the KubeArmor container to be fully ready
    #       docker ps -a

      - name: Start docker compose
        run: |
          docker compose -f docker-compose.yaml up -d
          sleep 10
          docker ps -a
        working-directory: ./.github/workflows

      - name: Test KubeArmor using Ginkgo
        run: |
          go install -mod=mod github.com/onsi/ginkgo/v2/ginkgo
          make
        working-directory: ./tests/nonk8s_env
        timeout-minutes: 30

      - name: Get karmor sysdump
        if: ${{ failure() }}
        run: |
          curl -sfL http://get.kubearmor.io/ | sudo sh -s -- -b /usr/local/bin
          mkdir -p /tmp/kubearmor/ && cd /tmp/kubearmor && karmor sysdump

      - name: Archive log artifacts
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: kubearmor.logs
          path: |
            /tmp/kubearmor/
            /tmp/kubearmor.*
