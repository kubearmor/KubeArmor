// SPDX-License-Identifier: Apache-2.0
// Copyright 2022 Authors of KubeArmor

// Code generated by informer-gen. DO NOT EDIT.

package v1

import (
	internalinterfaces "github.com/kubearmor/KubeArmor/pkg/KubeArmorController/client/informers/externalversions/internalinterfaces"
)

// Interface provides access to all the informers in this group version.
type Interface interface {
	// KubeArmorClusterPolicies returns a KubeArmorClusterPolicyInformer.
	KubeArmorClusterPolicies() KubeArmorClusterPolicyInformer
	// KubeArmorHostPolicies returns a KubeArmorHostPolicyInformer.
	KubeArmorHostPolicies() KubeArmorHostPolicyInformer
	// KubeArmorPolicies returns a KubeArmorPolicyInformer.
	KubeArmorPolicies() KubeArmorPolicyInformer
}

type version struct {
	factory          internalinterfaces.SharedInformerFactory
	namespace        string
	tweakListOptions internalinterfaces.TweakListOptionsFunc
}

// New returns a new Interface.
func New(f internalinterfaces.SharedInformerFactory, namespace string, tweakListOptions internalinterfaces.TweakListOptionsFunc) Interface {
	return &version{factory: f, namespace: namespace, tweakListOptions: tweakListOptions}
}

// KubeArmorClusterPolicies returns a KubeArmorClusterPolicyInformer.
func (v *version) KubeArmorClusterPolicies() KubeArmorClusterPolicyInformer {
	return &kubeArmorClusterPolicyInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}

// KubeArmorHostPolicies returns a KubeArmorHostPolicyInformer.
func (v *version) KubeArmorHostPolicies() KubeArmorHostPolicyInformer {
	return &kubeArmorHostPolicyInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}

// KubeArmorPolicies returns a KubeArmorPolicyInformer.
func (v *version) KubeArmorPolicies() KubeArmorPolicyInformer {
	return &kubeArmorPolicyInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}
