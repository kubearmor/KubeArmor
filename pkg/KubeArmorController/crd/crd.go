// SPDX-License-Identifier: Apache-2.0
// Copyright 2022 Authors of KubeArmor

package crd

import (
	_ "embed"
	"log"

	"sigs.k8s.io/yaml"

	apiextensionsv1 "k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1"
)

//go:embed KubeArmorPolicy.yaml
var kspCrdBytes []byte

//go:embed KubeArmorHostPolicy.yaml
var hspCrdBytes []byte

//go:embed KubeArmorClusterPolicy.yaml
var cspCrdBytes []byte

// GetCRD returns the generated CRD. The CRD is generated by controller-gen
// which is embedded at compile time using go:embed.
func GetKspCRD() apiextensionsv1.CustomResourceDefinition {
	ksp := apiextensionsv1.CustomResourceDefinition{}
	err := yaml.Unmarshal(kspCrdBytes, &ksp)
	if err != nil {
		log.Fatal("Error unmarshalling pregenerated CRD")
	}
	return ksp
}

func GetHspCRD() apiextensionsv1.CustomResourceDefinition {
	hsp := apiextensionsv1.CustomResourceDefinition{}
	err := yaml.Unmarshal(hspCrdBytes, &hsp)
	if err != nil {
		log.Fatal("Error unmarshalling pregenerated CRD")
	}
	return hsp
}

func GetCspCRD() apiextensionsv1.CustomResourceDefinition {
	csp := apiextensionsv1.CustomResourceDefinition{}
	err := yaml.Unmarshal(cspCrdBytes, &csp)
	if err != nil {
		log.Fatal("Error unmarshalling pregenerated CRD")
	}
	return csp
}
