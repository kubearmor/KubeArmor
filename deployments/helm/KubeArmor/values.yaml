# Default values for kubearmor.
# Declare variables to be passed into your templates.

nodes:
# - config:
#     enforcer: bpf
#     runtime: cri-o
#     socket: run_crio_crio.sock
#     arch: "amd64"
#     btf: "yes"
#     apparmorfs: "yes"
#     seccomp: "no"
# - config:
#     enforcer: apparmor
#     runtime: containerd
#     socket: run_containerd_containerd.sock
#     btf: "no"
#     arch: "amd64"
#     apparmorfs: "yes"
#     seccomp: "yes"

# registry flags
globalRegistry: kubearmor
# if set to true, override registry for third party container images
# not managed by the kubearmor. i.e. kuberbacproxy
# it would be useful in cases where all the container images should be
# used from a particular registry for example on marketplaces
useGlobalRegistryForVendorImages: false

seccomp:
  enabled: false
  profiles:
    kubearmor: kubearmor-seccomp.json
    kubearmorInit: kubearmor-init-seccomp.json

tls:
  enabled: false

kubearmorRelay:
  # to enable/disable kubearmor-relay
  enabled: true
  image:
    # if defined it will be preferred over global registry
    registry: ""
    # kubearmor-init image repo
    repository: kubearmor-relay-server
    # kubearmor-init image tag
    tag: latest
  # kubearmor-init imagePullPolicy
  imagePullPolicy: Always
  # imagePullSecrets:
  #   - name: secretName
  imagePullSecrets: []
  args: []
  # https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
  # - key: "key"
  #   operator: "Equal|Exists"
  #   value: "value"
  #   effect: "NoSchedule|PreferNoSchedule|NoExecute"
  tolerations: []
  # https://kubernetes.io/docs/concepts/scheduling-eviction/pod-priority-preemption/
  priorityClassName: ""
  # Add environment variables for STDOUT logging
  enableStdoutLogs: "false"
  enableStdoutAlerts: "false"
  enableStdoutMsg: "false"

  tls:
    extraDnsNames: ["localhost"]
    extraIpAddresses: ["127.0.0.1"]
    tlsCertPath: /var/lib/kubearmor/tls
    tlsCertProvider: external
    certSecretName: kubearmor-relay-server-certs
    certVolumeMount:
    - mountPath: /var/lib/kubearmor/tls
      name: kubearmor-relay-certs-secrets
      readOnly: true
    certVolume:
    - name: kubearmor-relay-certs-secrets
      projected:
        defaultMode: 0444
        sources:
        - secret:
            name: kubearmor-relay-server-certs
            items:
            - key: tls.crt
              path: server.crt
            - key: tls.key
              path: server.key
            - key: ca.crt
              path: ca.crt
        - secret:
            name: kubearmor-client-certs
            items:
            - key: tls.crt
              path: client.crt
            - key: tls.key
              path: client.key  


kubearmorInit:
  deploy: true
  image:
    # if defined it will be preferred over global registry
    registry: ""
    # kubearmor-init image repo
    repository: kubearmor-init
    # kubearmor-init image tag
    tag: stable
  # kubearmor-init imagePullPolicy
  imagePullPolicy: Always
  args: []


kubeRbacProxy:
  image:
    # it will be override if
    # useGlobalRegistryForVendorImages: true
    registry: gcr.io/kubebuilder
    # kube-rbac-proxy image repo
    repository: kube-rbac-proxy
    # kube-rbac-proxy image tag
    tag: v0.15.0
  # kube-rbac-proxy imagePullPolicy
  imagePullPolicy: Always
  args: []

kubearmorController:
  name: kubearmor-controller
  # kubearmor-controller replicas
  replicas: 1
  image:
    # if defined it will be preferred over global registry
    registry: ""
    # kubearmor-controller image repo
    repository: kubearmor-controller
    # kubearmor-controller image tag
    tag: latest
  mutation:
    # kubearmor-controller failure policy
    failurePolicy: Ignore
  # kubearmor-controller imagePullPolicy
  imagePullPolicy: "Always"
  # imagePullSecrets:
  #   - name: secretName
  imagePullSecrets: []
  args: []
  # https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
  tolerations: []
  # https://kubernetes.io/docs/concepts/scheduling-eviction/pod-priority-preemption/
  priorityClassName: ""
  

kubearmorConfigMap:
  defaultFilePosture: audit
  defaultCapabilitiesPosture: audit
  defaultNetworkPosture: audit
  visibility: process,network
  alertThrottling: true
  maxAlertPerSec: 10
  throttleSec: 30

#volume mounts and volumes
kubearmor:
  image:
    # if defined it will be preferred over global registry
    registry: ""
    # kubearmor daemonset image repo
    repository: kubearmor
    # kubearmor daemonset image tag
    tag: stable

  # kubearmor daemonset imagePullPolicy
  imagePullPolicy: Always
  # imagePullSecrets:
  #   - name: secretName
  imagePullSecrets: []
  # kubearmor daemonset arguments. See `kubearmor --help`
  args: [-gRPC=32767]
  # https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
  tolerations: []
  # https://kubernetes.io/docs/concepts/scheduling-eviction/pod-priority-preemption/
  priorityClassName: ""

  tls:
    tlsCertPath: /var/lib/kubearmor/tls
    tlsCertProvider: self
    caSecretName: kubearmor-ca
    clientCertSecretName: kubearmor-client-certs
    kubearmorCACertVolumeMount:
    - mountPath: /var/lib/kubearmor/tls
      name: kubearmor-ca-secret
      readOnly: true
    kubearmorCACertVolume:
    - name: kubearmor-ca-secret
      projected:
        defaultMode: 0444
        sources:
        - secret:
            name: kubearmor-ca
            items:
            - key: tls.crt
              path: ca.crt
            - key: tls.key
              path: ca.key

volumes:
  common:
    - hostPath:
        path: /sys/kernel/debug
        type: Directory
      name: sys-kernel-debug-path
  enforcer:
    apparmor:
      - hostPath:
          path: /etc/apparmor.d
          type: DirectoryOrCreate
        name: etc-apparmor-d-path
  init:
    bpf:
    - emptyDir: {}
      name: bpf
    kernelHeader:  
    - hostPath:
        path: /lib/modules
        type: DirectoryOrCreate
      name: lib-modules-path
    - hostPath:
        path: /usr/src
        type: Directory
      name: usr-src-path  

volumeMounts:
  common:
    - mountPath: /sys/kernel/debug
      name: sys-kernel-debug-path
  enforcer:
    apparmor:
      - mountPath: /etc/apparmor.d
        name: etc-apparmor-d-path
  runtime:
    containerd:
      - mountPath: /var/run/containerd/containerd.sock
        name: containerd-socket
        readOnly: true
    docker:
      - mountPath: /var/run/docker.sock
        name: docker-socket
        readOnly: true
    cri-o:
      - mountPath: /var/run/crio/crio.sock
        name: cri-o-socket
        readOnly: true
  init:
    bpf:
    - mountPath: /opt/kubearmor/BPF
      name: bpf
    kernelHeader:  
    - mountPath: /lib/modules
      name: lib-modules-path
      readOnly: true
    - mountPath: /usr/src
      name: usr-src-path
      readOnly: true