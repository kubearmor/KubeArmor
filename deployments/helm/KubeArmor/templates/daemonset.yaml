apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    kubearmor-app: kubearmor
  name: kubearmor
  namespace: {{.Release.Namespace}}
spec:
  selector:
    matchLabels:
      kubearmor-app: kubearmor
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/kubearmor: unconfined
      labels:
        kubearmor-app: kubearmor
    spec:
      containers:
      - args:
        - -gRPC=32767
        image: {{printf "%s:%s" .Values.kubearmor.image.repository .Values.kubearmor.image.tag}}
        imagePullPolicy: {{ .Values.kubearmor.imagePullPolicy }}
        env:
        - name: KUBEARMOR_NODENAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: KUBEARMOR_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        livenessProbe:
          exec:
            command:
            - /bin/bash
            - -c
            - if [ -z $(pgrep kubearmor) ]; then exit 1; fi;
          initialDelaySeconds: 60
          periodSeconds: 10
        name: kubearmor
        ports:
        - containerPort: 32767
        securityContext:
          capabilities:
            {{- toYaml .Values.kubearmor.capabilities | trim | nindent 12 }}
          privileged: false
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        {{- toYaml .Values.kubearmor.commonMounts | trim | nindent 10 }}
        {{- if eq .Values.environment.name "docker" }}
          {{- toYaml .Values.kubearmor.volumeMountsDocker | trim | nindent 10 }}
        {{- else if eq .Values.environment.name "crio" }}
          {{- toYaml .Values.kubearmor.volumeMountsCRIO | trim | nindent 10 }}
        {{- else if eq .Values.environment.name "microk8s" }}
          {{- toYaml .Values.kubearmor.volumeMountsMicroK8s | trim | nindent 10 }}
        {{- else if eq .Values.environment.name "k0s" }}
          {{- toYaml .Values.kubearmor.volumeMountsK0s | trim | nindent 10 }}
        {{- else if eq .Values.environment.name "k3s" }}
          {{- toYaml .Values.kubearmor.volumeMountsK3s | trim | nindent 10 }}
        {{- else if eq .Values.environment.name "minikube" }}
          {{- toYaml .Values.kubearmor.volumeMountsMinikube | trim | nindent 10 }}
        {{- else if eq .Values.environment.name "GKE" }}
          {{- toYaml .Values.kubearmor.volumeMountsGKE | trim | nindent 10 }}
        {{- else if eq .Values.environment.name "BottleRocket" }}
          {{- toYaml .Values.kubearmor.volumeMountsBottleRocket | trim | nindent 10 }}
        {{- else if eq .Values.environment.name "EKS" }}
          {{- toYaml .Values.kubearmor.volumeMountsEKS | trim | nindent 10 }}
        {{- else }} # generic
          {{- toYaml .Values.kubearmor.volumeMountsGeneric | trim | nindent 10 }}
        {{- end }}

      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      hostPID: true
      initContainers:
      - image: {{printf "%s:%s" .Values.kubearmorInit.image.repository .Values.kubearmorInit.image.tag}}
        imagePullPolicy: {{ .Values.kubearmorInit.imagePullPolicy }}
        name: init
        securityContext:
          capabilities:
            add:
            - SETUID
            - SETGID
            - SETPCAP
            - SYS_ADMIN
            - SYS_PTRACE
            - MAC_ADMIN
            - SYS_RESOURCE
            - IPC_LOCK
            - CAP_DAC_OVERRIDE
            - CAP_DAC_READ_SEARCH
            drop:
            - ALL
          privileged: false
        volumeMounts:
        {{- toYaml .Values.kubearmor.initMounts | trim | nindent 10 }}
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: Always
      serviceAccountName: kubearmor
      terminationGracePeriodSeconds: 30
      tolerations:
      - operator: Exists
      volumes:
      {{- toYaml .Values.kubearmor.commonVolumes | trim | nindent 8}}
      {{- if eq .Values.environment.name "docker" }}
        {{- toYaml .Values.kubearmor.volumesDocker | trim | nindent 8 }}
      {{- else if eq .Values.environment.name "crio" }}
        {{- toYaml .Values.kubearmor.volumesCRIO | trim | nindent 8 }}
      {{- else if eq .Values.environment.name "microk8s" }}
        {{- toYaml .Values.kubearmor.volumesMicroK8s | trim | nindent 8 }}
      {{- else if eq .Values.environment.name "k0s" }}
        {{- toYaml .Values.kubearmor.volumesK0s | trim | nindent 8 }}
      {{- else if eq .Values.environment.name "k3s" }}
        {{- toYaml .Values.kubearmor.volumesK3s | trim | nindent 8 }}
      {{- else if eq .Values.environment.name "minikube" }}
        {{- toYaml .Values.kubearmor.volumesMinikube | trim | nindent 8 }}
      {{- else if eq .Values.environment.name "GKE" }}
        {{- toYaml .Values.kubearmor.volumesGKE | trim | nindent 8 }}
      {{- else if eq .Values.environment.name "BottleRocket" }}
        {{- toYaml .Values.kubearmor.volumesBottleRocket | trim | nindent 8 }}
      {{- else if eq .Values.environment.name "EKS" }}
        {{- toYaml .Values.kubearmor.volumesEKS | trim | nindent 8 }}
      {{- else }} # generic
        {{- toYaml .Values.kubearmor.volumesGeneric | trim | nindent 8 }}
      {{- end }}
