apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    kubearmor-app: kubearmor
  name: kubearmor
  namespace: {{ .Values.namespace.name }}
spec:
  selector:
    matchLabels:
      kubearmor-app: kubearmor
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/kubearmor: unconfined
      labels:
        kubearmor-app: kubearmor
    spec:
      containers:
      - args:
        - -gRPC=32767
        - -logPath=/tmp/kubearmor.log
      {{- if ne .Values.environment.name "minikube" }}  
        - -enableKubeArmorHostPolicy
      {{- end }}

        image: "{{ .Values.kubearmor.image.repository }}:{{ .Values.kubearmor.image.tag }}"
        livenessProbe:
          exec:
            command:
            - /bin/bash
            - -c
            - if [ -z $(pgrep kubearmor) ]; then exit 1; fi;
          initialDelaySeconds: 60
          periodSeconds: 10
        name: kubearmor
        ports:
        - containerPort: 32767
        securityContext:
          privileged: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        {{- if eq .Values.environment.name "docker" }}
          {{- toYaml .Values.kubearmor.volumeMountsDocker | nindent 10 }}
        {{ else if eq .Values.environment.name "microk8s" }}
          {{- toYaml .Values.kubearmor.volumeMountsMicroK8s | nindent 10 }}
        {{ else if eq .Values.environment.name "k3s" }}
          {{- toYaml .Values.kubearmor.volumeMountsK3s | nindent 10 }}
        {{ else if eq .Values.environment.name "minikube" }}
          {{- toYaml .Values.kubearmor.volumeMountsMinikube | nindent 10 }}
        {{- else }} # generic
          {{- toYaml .Values.kubearmor.volumeMountsGeneric | nindent 10 }}  
        {{- end }}

      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      hostPID: true
      initContainers:
      - image: kubearmor/kubearmor-init:latest
        name: init
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /opt/kubearmor/BPF
          name: bpf
        - mountPath: /lib/modules
          name: lib-modules-path
          readOnly: true
        - mountPath: /sys/fs/bpf
          name: sys-fs-bpf-path
        - mountPath: /sys/kernel/security
          name: sys-kernel-security-path
        - mountPath: /sys/kernel/debug
          name: sys-kernel-debug-path
        - mountPath: /media/root/etc/os-release
          name: os-release-path
          readOnly: true
        - mountPath: /usr/src
          name: usr-src-path
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: Always
      serviceAccountName: kubearmor
      terminationGracePeriodSeconds: 30
      tolerations:
      - operator: Exists
      volumes:
      {{- if eq .Values.environment.name "docker" }}
        {{- toYaml .Values.kubearmor.volumesDocker | nindent 8 }}
      {{ else if eq .Values.environment.name "microk8s" }}
        {{- toYaml .Values.kubearmor.volumesMicroK8s | nindent 8 }}
      {{ else if eq .Values.environment.name "k3s" }}
        {{- toYaml .Values.kubearmor.volumesK3s | nindent 8 }}
      {{ else if eq .Values.environment.name "minikube" }}
        {{- toYaml .Values.kubearmor.volumesMinikube | nindent 8 }}
      {{- else }} # generic
        {{- toYaml .Values.kubearmor.volumesGeneric | nindent 8 }}
      {{- end }}
