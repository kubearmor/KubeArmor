{{- if .Values.kubearmorrelay.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    kubearmor-app: kubearmor-relay
  name: kubearmor-relay
  namespace: {{ .Values.namespace.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      kubearmor-app: kubearmor-relay
  template:
    metadata:
      annotations:
        kubearmor-policy: audited
      labels:
        kubearmor-app: kubearmor-relay
    spec:
      containers:
      - image: "{{ .Values.kubearmorRelay.image.repository }}:{{ .Values.kubearmorRelay.image.tag }}"
        name: kubearmor-relay-server
        ports:
        - containerPort: 32767
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: kubearmor
{{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    kubearmor-app: kubearmor-policy-manager
  name: kubearmor-policy-manager
  namespace: {{ .Values.namespace.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      kubearmor-app: kubearmor-policy-manager
  template:
    metadata:
      annotations:
        kubearmor-policy: audited
      labels:
        kubearmor-app: kubearmor-policy-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: "{{ .Values.kubeRbacProxy.image.repository }}:{{ .Values.kubeRbacProxy.image.tag }}"
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
        resources:
          limits:
            cpu: 100m
            memory: 40Mi
          requests:
            cpu: 100m
            memory: 20Mi
      - args:
        - --metrics-addr=127.0.0.1:8080
        - --enable-leader-election
        command:
        - /manager
        image: "{{ .Values.kubearmorPolicyManager.image.repository }}:{{ .Values.kubearmorPolicyManager.image.tag }}"
        name: kubearmor-policy-manager
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 3
          periodSeconds: 3
        resources:
          limits:
            cpu: 100m
            memory: 40Mi
          requests:
            cpu: 100m
            memory: 20Mi
      serviceAccountName: kubearmor
      terminationGracePeriodSeconds: 10
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    kubearmor-app: kubearmor-host-policy-manager
  name: kubearmor-host-policy-manager
  namespace: {{ .Values.namespace.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      kubearmor-app: kubearmor-host-policy-manager
  template:
    metadata:
      annotations:
        kubearmor-policy: audited
      labels:
        kubearmor-app: kubearmor-host-policy-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: "{{ .Values.kubeRbacProxy.image.repository }}:{{ .Values.kubeRbacProxy.image.tag }}"
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
        resources:
          limits:
            cpu: 100m
            memory: 40Mi
          requests:
            cpu: 100m
            memory: 20Mi
      - args:
        - --metrics-addr=127.0.0.1:8080
        - --enable-leader-election
        command:
        - /manager
        image: "{{ .Values.kubearmorHostPolicyManager.image.repository }}:{{ .Values.kubearmorHostPolicyManager.image.tag }}"
        name: kubearmor-host-policy-manager
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 3
          periodSeconds: 3
        resources:
          limits:
            cpu: 100m
            memory: 40Mi
          requests:
            cpu: 100m
            memory: 20Mi
      serviceAccountName: kubearmor
      terminationGracePeriodSeconds: 10
